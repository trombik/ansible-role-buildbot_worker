---
- hosts: localhost
  roles:
    - ansible-role-buildbot_worker
  vars:
    buildbot_worker_flags_freebsd: |
      buildbot_worker_basedir="{{ buildbot_worker_conf_dir }}"
    buildbot_worker_flags_ubuntu: |
      WORKER_ENABLED[1]=1                    # 1-enabled, 0-disabled
      WORKER_NAME[1]="default"               # short name printed on start/stop
      WORKER_USER[1]="buildbot"              # user to run worker as
      WORKER_BASEDIR[1]="{{ buildbot_worker_conf_dir }}"  # basedir to worker (absolute path)
      WORKER_OPTIONS[1]=""                   # buildbot options
      WORKER_PREFIXCMD[1]=""                 # prefix command, i.e. nice, linux32, dchroot

    buildbot_worker_flags: "{% if ansible_os_family == 'FreeBSD' %}{{ buildbot_worker_flags_freebsd }}{% elif ansible_os_family == 'Debian' %}{{ buildbot_worker_flags_ubuntu }}{% endif %}"
    buildbot_worker_config: |
      import os
      from buildbot_worker.bot import Worker
      from twisted.application import service
      basedir = '{{ buildbot_worker_conf_dir }}'
      rotateLength = 10000000
      maxRotatedFiles = 10
      # if this is a relocatable tac file, get the directory containing the TAC
      if basedir == '.':
          import os.path
          basedir = os.path.abspath(os.path.dirname(__file__))
      # note: this line is matched against to check that this is a worker
      # directory; do not edit it.
      application = service.Application('buildbot-worker')
      from twisted.python.logfile import LogFile
      from twisted.python.log import ILogObserver, FileLogObserver
      logfile = LogFile.fromFullPath(
          os.path.join(basedir, "twistd.log"), rotateLength=rotateLength,
          maxRotatedFiles=maxRotatedFiles)
      application.setComponent(ILogObserver, FileLogObserver(logfile).emit)
      buildmaster_host = 'localhost'
      port = 9989
      workername = 'test-worker'
      passwd = 'pass'
      keepalive = 600
      umask = None
      maxdelay = 300
      numcpus = None
      allow_shutdown = None
      maxretries = None
      s = Worker(buildmaster_host, port, workername, passwd, basedir,
                 keepalive, umask=umask, maxdelay=maxdelay,
                 numcpus=numcpus, allow_shutdown=allow_shutdown,
                 maxRetries=maxretries)
      s.setServiceParent(application)
